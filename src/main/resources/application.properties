

server.port=8081
swagger.enable = true


spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/shop?serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=root

spring.mail.host=smtp.mxhichina.com
#spring.mail.host=smtp.aliyun.com
spring.mail.username=dev@tenez.cn
#spring.mail.username=wb-hw482079@alibaba-inc.com
#spring.mail.username=hwaixixi@aliyun.com
spring.mail.password=Mall20151118
#spring.mail.password=xixi0727@
spring.mail.port=25
spring.mail.to=hwaixixi@aliyun.com
spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.ssl.trust=smtp.mxhichina.com
#spring.mail.properties.mail.smtp.ssl.enable=true
##SSL证书Socket工厂
#spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
##使用SMTPS协议465端口
#spring.mail.properties.mail.smtp.socketFactory.port=465
#spring.mail.properties.mail.smtp.port=465
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true
#
## 超时时间，可选
#spring.mail.properties.mail.smtp.connectiontimeout=5000
#spring.mail.properties.mail.smtp.timeout=3000
#spring.mail.properties.mail.smtp.writetimeout=5000


##数据源类型
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
##连接池名称，默认HikariPool-1
#spring.datasource.hikari.pool-name=KevinHikariPool
##最大连接数，小于等于0会被重置为默认值10；大于零小于1会被重置为minimum-idle的值
#spring.datasource.hikari.maximum-pool-size=12
##连接超时时间:毫秒，小于250毫秒，否则被重置为默认值30秒
#spring.datasource.hikari.connection-timeout=60000
##最小空闲连接，默认值10，小于0或大于maximum-pool-size，都会重置为maximum-pool-size
#spring.datasource.hikari.minimum-idle=10
##空闲连接超时时间，默认值600000（10分钟），大于等于max-lifetime且max-lifetime>0，会被重置为0；不等于0且小于10秒，会被重置为10秒。
## 只有空闲连接数大于最大连接数且空闲时间超过该值，才会被释放
#spring.datasource.hikari.idle-timeout=500000
##连接最大存活时间.不等于0且小于30秒，会被重置为默认值30分钟.设置应该比mysql设置的超时时间短
#spring.datasource.hikari.max-lifetime=540000
##连接测试查询
#spring.datasource.hikari.connection-base-query=SELECT 1

#spring.servlet.multipart.enabled=true
#spring.servlet.multipart.file-size-threshold=100MB
#spring.servlet.multipart.max-request-size=100MB
#spring.servlet.multipart.max-file-size=100MB
#spring.servlet.multipart.max-request-size=1Mb


#配置文件传输
# 该配置默认为true
# 如果设置为false，则MultipartHttpServletRequest multipartHttpServletRequest = (MultipartHttpServletRequest)request;将无法使用
#如果设置为false，则可以使用FileItemFactory factory = new DiskFileItemFactory();
#        ServletFileUpload fileUpload = new ServletFileUpload(factory);
spring.servlet.multipart.enabled =true
spring.servlet.multipart.file-size-threshold =0
#单个数据的大小
spring.servlet.multipart.max-file-size = 200MB
#总数据的大小
spring.servlet.multipart.max-request-size=200MB